/**
 * JPolygon.java: a convenience class for simplifying access to awt
 *    graphics objects supported by the Graphics AWT class. 
 *    The class extends JComponent, but the interface is patterned
 *    after that of wheels. 
 * 
 * @author rdb
 *    derived from JRectangle
 *    contains a java.awt.Polygon instance
 */

import java.awt.geom.*;
import java.awt.*;
import javax.swing.*;

public class JPolygon extends JAreaShape 
{
    //---------------- instance variables ------------------------
    Polygon poly;
    //--------------------  constructors ---------------------------
    /**
     * Constructor from JPolygon
     */
    public JPolygon( int[] x, int[] y )
    { 
        super( );
        ///////////////////////////////////////////////////////////////
        // 1. Create an instance of java.awt.Polygon
        //        look it up on the web.
        //    Use the constructor that takes x and y coordinate arrays and
        //       a length. The length should be the minimum of the lengths
        //       of the x and y arrays passed to this constructor
        //    Assign the "new" Polygon to the instance variable "poly"
        //       that has already been declared.
        //
        // 2. Once you've created the polygon, you need to assign its
        //    bounds to the bounds of the JPolygon (which is a JComponent)
        //    JComponent has a setBounds method with a java.awt.Rectangle
        //       as its only argument.
        //    java.awt.Polygon has a "getBounds" method with no parameters
        //       and returns a java.awt.Rectangle.
        ///////////////////////////////////////////////////////////////
        
        
    }
    
    //----------------------- paintComponent( Graphics2D ) ---------------
    /**
     * paintComponent - calls draw and fill awt methods (an rdb method).
     */
    public void paintComponent( java.awt.Graphics brush )
    {
        /////////////////////////////////////////////////////////////////
        // copy the paintComponent method of JRectangle to here
        //
        // All you need to change are the calls to fillRect and drawRect
        // Replace them with calls to fillPolygon and drawPolygon
        //     Look these methods up under the java.awt.Graphics2D
        //     class documentation on the web.
        /////////////////////////////////////////////////////////////////
    }   
}
